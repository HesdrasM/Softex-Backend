Padrões criacionais:

Os padrões criacionais fornecem vários mecanismos de criação de objetos, que 
aumentam a flexibilidade e reutilização de código já existente. 
Os padrões criacionais são técnicas que ajudam controlar como as instâncias de classes são criadas.

Os padrões GoF documentam cinco padrões criacionais: Builder, Abstract Factory, Factory Method, 
Prototype e Singleton. Apesar de estes padrões possuírem implementações diferentes entre si, resumidamente
 todos têm o objetivo de controlar como as classes do projeto serão criadas, evitando o uso descontrolado 
 de instruções como “TMinhaClasse.Create”.

- Factory Method: é um padrão criacional de projeto que fornece uma interface para criar objetos em uma 
superclasse, mas permite que as subclasses alterem o tipo de objetos que serão criados.

poto negativo: Imagine que você está criando uma aplicação de gerenciamento de logística.
 A primeira versão da sua aplicação pode lidar apenas com o transporte de caminhões, 
 portanto a maior parte do seu código fica dentro da classe Caminhão.

Depois de um tempo, sua aplicação se torna bastante popular. Todos os dias você recebe dezenas
 de solicitações de empresas de transporte marítimo para incorporar a logística marítima na aplicação.

ponto positivo: O padrão Factory Method sugere que você substitua chamadas diretas de construção de objetos
 (usando o operador new) por chamadas para um método fábrica especial. Não se preocupe: os objetos ainda são 
 criados através do operador new, mas esse está sendo chamado de dentro do método fábrica. Objetos retornados
  por um método fábrica geralmente são chamados de produtos.

Referências:
1 https://refactoring.guru/pt-br/design-patterns/creational-patterns
2 https://www.devmedia.com.br/introducao-aos-padroes-criacionais-abstract-factory-factory-method-prototype-e-singleton/21249

